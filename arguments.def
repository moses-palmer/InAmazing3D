#ifndef ARGUMENT_HELPERS
#define ARGUMENT_HELPERS

#define ARGUMENTS_NO_SETUP
#define ARGUMENTS_NO_TEARDOWN

#define ARGUMENTS_HELP \
    "This application allows exploring a randomly generated maze as an " \
    "autostereogram interactively."

#endif

ARGUMENT(struct { int width; int height; }, maze_size, "-m",
    "<width> <height>\n"
    "Sets the size of the maze. The width and height must be greater than 1.\n"
    "\n"
    "Default: 30 20",
    2, ARGUMENT_IS_OPTIONAL,

    target->width = 30;
    target->height = 20;
    ,

    target->width = atoi(value_strings[0]);
    target->height = atoi(value_strings[1]);
    is_valid = target->width > 1 && target->height > 1;

    if (!is_valid) {
        fprintf(stderr, "Invalid value for maze-size (%s %s): dimensions must "
            "be integers larger than 1\n",
            value_strings[0], value_strings[1]);
    }
    ,
)

ARGUMENT(double, wall_width, "-w",
    "<value>\n"
    "Sets the width of walls in the maze.\n"
    "\n"
    "A value of 0.5 would cause the walls on the different sides of a room to "
    "run into each other and leave no room for the target.\n"
    "Default: 0.05",
    1, ARGUMENT_IS_OPTIONAL,

    *target = 0.05;
    ,

    char *end;
    *target = strtod(value_strings[0], &end);
    is_valid = *end == 0 && *target >= 0.0
        && *target + MAZE_SLOPE_WIDTH < 0.5;

    if (!is_valid) {
        fprintf(stderr, "Invalid value for wall-width (%s): the width must be "
            "a number between 0.0 and %g\n",
            value_strings[0], 0.5 - MAZE_SLOPE_WIDTH);
    }
    ,
)

ARGUMENT(double, shortcut_ratio, "-s",
    "<value>\n"
    "Sets the shortcut ratio for the maze.\n"
    "\n"
    "When the maze has been generated, a number of walls are opened. The walls "
    "are selected randomly, and if they are not on the edge of the maze, they "
    "are opened. The number of attempts is 4 * <maze-width> * <maze-height> "
    "* <value>.\n"
    "Default: 0.0",
    1, ARGUMENT_IS_OPTIONAL,

    *target = 0.0;
    ,

    char *end;
    *target = strtod(value_strings[0], &end);
    is_valid = *end == 0 && *target >= 0.0 && *target <= 1.0;

    if (!is_valid) {
        fprintf(stderr, "Invalid value for shortcut_ratio (%s): the ratio must "
            "be a number between 0.0 and 1.0\n",
            value_strings[0]);
    }
    ,
)
